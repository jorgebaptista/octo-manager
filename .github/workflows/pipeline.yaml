name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.23"
      - run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s latest
          echo "PATH=$(pwd)/bin:\$PATH" >> $GITHUB_ENV

      - run: golangci-lint run ./...

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.23"
      - run: go install github.com/securego/gosec/v2/cmd/gosec@latest
      - run: gosec ./...

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.23"
      - run: go mod tidy
      - run: go test ./... -v

  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: "1.23"
      - run: go mod tidy
      - run: go test ./tests/integration -v

  build:
    runs-on: ubuntu-latest
    needs: [lint, security, unit-tests, integration-tests]
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker build -t jorgebaptista/octo-manager:latest .
      - run: docker push jorgebaptista/octo-manager:latest
      - run: docker logout

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl

      - run: kubectl version --client

      - run: |
          curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
          chmod +x minikube-linux-amd64
          sudo mv minikube-linux-amd64 /usr/local/bin/minikube

      - run: minikube start

      - run: |
          kubectl create secret generic octo-manager-secret \
          --from-literal=token=${{ secrets.GH_TOKEN }} \
          --from-literal=owner=${{ secrets.GH_USER }}

      - run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

      - name: Wait for resource creation
        run: sleep 10
      - name: Check Pod Creation
        run: kubectl get pods -A
      - name: Wait for pods to be ready
        run: kubectl wait --for=condition=ready pod --all --timeout=60s
      - name: Check Pod Status
        run: kubectl get pods
      - name: Check Service
        run: kubectl get svc

    # todo integration:
